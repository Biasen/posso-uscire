{"version":3,"sources":["components/Header.js","components/Disclaimer.js","lib/province.js","rules/Constants.js","rules/zonaArancione.js","rules/zonaGialla.js","rules/zonaRossa.js","rules/index.js","components/ActiveRulesList.js","components/SearchBox.js","App.js","components/theme.js","index.js"],"names":["useStyles","makeStyles","theme","subTitle","marginTop","spacing","marginBottom","Header","classes","Typography","gutterBottom","Box","textAlign","fontSize","fontFamily","m","className","color","copyrightBox","contributeBox","Disclaimer","variant","align","Link","href","province","ALL_REGIONS","name","details","from","to","regions","commonDetails","zonaGiallaRafforzata","allRules","zonaGialla","zonaArancione","zonaRossa","cardRoot","dateFromTo","rulesList","rule","parseDate","date","Date","toLocaleDateString","Rule","join","Card","CardContent","component","List","dense","map","detail","ListItem","button","ListItemText","primary","ActiveRulesList","activeRules","selectedProvince","now","filter","includes","regione","sort","first","second","getActiveRules","length","nome","SearchBox","useState","choosenProvince","setProvince","onClick","display","justifyContent","Autocomplete","id","onChange","_","value","options","getOptionLabel","option","style","width","renderInput","params","TextField","label","App","Container","maxWidth","my","createMuiTheme","palette","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.06361506.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nconst useStyles = makeStyles((theme) => ({\n  subTitle: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(1),\n  },\n}))\n\nexport default function Header() {\n  const classes = useStyles()\n  return (\n    <>\n      <Typography gutterBottom>\n        <Box textAlign=\"center\" fontSize=\"h3.fontSize\" fontFamily=\"Roboto\" m={1}>\n          Posso uscire ?\n        </Box>\n      </Typography>\n\n      <Typography className={classes.subTitle} color=\"textPrimary\">\n        <Box textAlign=\"left\" fontSize={20}>\n             Inserisci la tua provincia per conoscere le restrizioni.\n        </Box>\n      </Typography>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Link from '@material-ui/core/Link'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n  copyrightBox: {\n    marginTop: theme.spacing(10),\n  },\n  contributeBox: {\n    marginTop: theme.spacing(0.4),\n  },\n}))\n\nexport default function Disclaimer() {\n  const classes = useStyles()\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.copyrightBox} >\n      <Box>\n        Le informazioni fornite potrebbero essere incomplete o non corrette.\n      </Box>\n      <Box>\n        Attenersi sempre a fonti governative ufficiali.\n      </Box>\n\n      <Box className={classes.contributeBox}>\n        <Link href=\"http://github.com/Guglio95/posso-uscire\">\n          Contribuisci al progetto su Github\n        </Link>\n      </Box>\n    </Typography>\n  )\n}\n","/* eslint-disable */\n/* https://gist.github.com/stockmind/8bcbbf9ac41bc196401b96084ec8c5d3 */\nconst province = [\n  {\n    'nome': 'Agrigento',\n    'sigla': 'AG',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Alessandria',\n    'sigla': 'AL',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Ancona',\n    'sigla': 'AN',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Arezzo',\n    'sigla': 'AR',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Ascoli Piceno',\n    'sigla': 'AP',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Asti',\n    'sigla': 'AT',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Avellino',\n    'sigla': 'AV',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Bari',\n    'sigla': 'BA',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Barletta-Andria-Trani',\n    'sigla': 'BT',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Belluno',\n    'sigla': 'BL',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Benevento',\n    'sigla': 'BN',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Bergamo',\n    'sigla': 'BG',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Biella',\n    'sigla': 'BI',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Bologna',\n    'sigla': 'BO',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Bolzano/Bozen',\n    'sigla': 'BZ',\n    'regione': 'Trentino-Alto Adige/Südtirol',\n  },\n  {\n    'nome': 'Brescia',\n    'sigla': 'BS',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Brindisi',\n    'sigla': 'BR',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Cagliari',\n    'sigla': 'CA',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Caltanissetta',\n    'sigla': 'CL',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Campobasso',\n    'sigla': 'CB',\n    'regione': 'Molise',\n  },\n  {\n    'nome': 'Carbonia-Iglesias',\n    'sigla': 'CI',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Caserta',\n    'sigla': 'CE',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Catania',\n    'sigla': 'CT',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Catanzaro',\n    'sigla': 'CZ',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Chieti',\n    'sigla': 'CH',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Como',\n    'sigla': 'CO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Cosenza',\n    'sigla': 'CS',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Cremona',\n    'sigla': 'CR',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Crotone',\n    'sigla': 'KR',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Cuneo',\n    'sigla': 'CN',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Enna',\n    'sigla': 'EN',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Fermo',\n    'sigla': 'FM',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Ferrara',\n    'sigla': 'FE',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Firenze',\n    'sigla': 'FI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Foggia',\n    'sigla': 'FG',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Forlì-Cesena',\n    'sigla': 'FC',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Frosinone',\n    'sigla': 'FR',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Genova',\n    'sigla': 'GE',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Gorizia',\n    'sigla': 'GO',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Grosseto',\n    'sigla': 'GR',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Imperia',\n    'sigla': 'IM',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Isernia',\n    'sigla': 'IS',\n    'regione': 'Molise',\n  },\n  {\n    'nome': \"L'Aquila\",\n    'sigla': 'AQ',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'La Spezia',\n    'sigla': 'SP',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Latina',\n    'sigla': 'LT',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Lecce',\n    'sigla': 'LE',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Lecco',\n    'sigla': 'LC',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Livorno',\n    'sigla': 'LI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Lodi',\n    'sigla': 'LO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Lucca',\n    'sigla': 'LU',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Macerata',\n    'sigla': 'MC',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Mantova',\n    'sigla': 'MN',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Massa-Carrara',\n    'sigla': 'MS',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Matera',\n    'sigla': 'MT',\n    'regione': 'Basilicata',\n  },\n  {\n    'nome': 'Medio Campidano',\n    'sigla': 'VS',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Messina',\n    'sigla': 'ME',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Milano',\n    'sigla': 'MI',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Modena',\n    'sigla': 'MO',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Monza e della Brianza',\n    'sigla': 'MB',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Napoli',\n    'sigla': 'NA',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Novara',\n    'sigla': 'NO',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Nuoro',\n    'sigla': 'NU',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Ogliastra',\n    'sigla': 'OG',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Olbia-Tempio',\n    'sigla': 'OT',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Oristano',\n    'sigla': 'OR',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Padova',\n    'sigla': 'PD',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Palermo',\n    'sigla': 'PA',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Parma',\n    'sigla': 'PR',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Pavia',\n    'sigla': 'PV',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Perugia',\n    'sigla': 'PG',\n    'regione': 'Umbria',\n  },\n  {\n    'nome': 'Pesaro e Urbino',\n    'sigla': 'PU',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Pescara',\n    'sigla': 'PE',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Piacenza',\n    'sigla': 'PC',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Pisa',\n    'sigla': 'PI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Pistoia',\n    'sigla': 'PT',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Pordenone',\n    'sigla': 'PN',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Potenza',\n    'sigla': 'PZ',\n    'regione': 'Basilicata',\n  },\n  {\n    'nome': 'Prato',\n    'sigla': 'PO',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Ragusa',\n    'sigla': 'RG',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Ravenna',\n    'sigla': 'RA',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Reggio di Calabria',\n    'sigla': 'RC',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': \"Reggio nell'Emilia\",\n    'sigla': 'RE',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Rieti',\n    'sigla': 'RI',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Rimini',\n    'sigla': 'RN',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Roma',\n    'sigla': 'RM',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Rovigo',\n    'sigla': 'RO',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Salerno',\n    'sigla': 'SA',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Sassari',\n    'sigla': 'SS',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Savona',\n    'sigla': 'SV',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Siena',\n    'sigla': 'SI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Siracusa',\n    'sigla': 'SR',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Sondrio',\n    'sigla': 'SO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Taranto',\n    'sigla': 'TA',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Teramo',\n    'sigla': 'TE',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Terni',\n    'sigla': 'TR',\n    'regione': 'Umbria',\n  },\n  {\n    'nome': 'Torino',\n    'sigla': 'TO',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Trapani',\n    'sigla': 'TP',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Trento',\n    'sigla': 'TN',\n    'regione': 'Trentino-Alto Adige/Südtirol',\n  },\n  {\n    'nome': 'Treviso',\n    'sigla': 'TV',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Trieste',\n    'sigla': 'TS',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Udine',\n    'sigla': 'UD',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': \"Valle d'Aosta\",\n    'sigla': 'AO',\n    'regione': \"Valle d'Aosta\",\n  },\n  {\n    'nome': 'Varese',\n    'sigla': 'VA',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Venezia',\n    'sigla': 'VE',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Verbano-Cusio-Ossola',\n    'sigla': 'VB',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Vercelli',\n    'sigla': 'VC',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Verona',\n    'sigla': 'VR',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Vibo Valentia',\n    'sigla': 'VV',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Vicenza',\n    'sigla': 'VI',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Viterbo',\n    'sigla': 'VT',\n    'regione': 'Lazio',\n  },\n]\n\nexport default province\n","export const ALL_REGIONS = 'ALL_REGIONS'\n","import { ALL_REGIONS } from './Constants'\n\nconst zonaArancione = {\n  name: '🟧 Zona Arancione',\n  details: [\n    '🚫 Bar e ristoranti chiusi tranne che per asporto.',\n    '🛍 Negozi aperti.',\n    '❌ Centri commerciali chiusi.',\n    '👭 Si può uscire dal proprio comune per raggiungere amici e parenti una volta al giorno.',\n    \"📝 Serve l'autocertificazione per gli spostamenti al di fuori del comune.\",\n    '🌎 Puoi andare nella seconda casa ma solo se nella tua regione.',\n    '🚫 Non si possono superare i confini della regione.',\n  ],\n}\n\nexport default [\n  {\n    ...zonaArancione,\n    from: '2021/01/09 00:00:00',\n    to: '2021/01/10 23:59:59',\n    regions: ALL_REGIONS,\n  },\n]\n","import { ALL_REGIONS } from './Constants'\n\nconst commonDetails = [\n  '🍻 Bar e ristoranti aperti fino alle 18. Asporto fino alle 22.',\n  '🛍 Negozi e centri commerciali aperti.',\n  '🛏 Coprifuoco dalle 22.00 alle 05.00.',\n  '📝 Ci si può muovere liberamente, senza autocertificazione.',\n]\n\n// eslint-disable-next-line no-unused-vars\nconst zonaGialla = {\n  name: '🟨 Zona Gialla',\n  details: [\n    ...commonDetails,\n    '✅ Consentiti spostamenti in altre regioni gialle.',\n  ],\n}\n\nconst zonaGiallaRafforzata = {\n  name: '🟨 Zona Gialla Rafforzata',\n  details: [\n    ...commonDetails,\n    '🚫 Non si possono superare i confini della regione.',\n  ],\n}\n\nexport default [\n  {\n    ...zonaGiallaRafforzata,\n    from: '2021/01/07 00:00:00',\n    to: '2021/01/08 23:59:59',\n    regions: ALL_REGIONS,\n  },\n]\n","import { ALL_REGIONS } from './Constants'\n\nconst zonaRossa = {\n  name: '🟥 Zona Rossa',\n  details: [\n    '🚫 Bar, ristoranti e negozi chiusi tranne che per asporto.',\n    '👭 Si può uscire (in coppia) dal proprio comune per raggiungere amici e parenti una volta al giorno. Senza cambiare regione.',\n    '🛏 Coprifuoco dalle 22.00 alle 05.00.',\n    \"📝 Serve l'autocertificazione per qualsiasi spostamento.\",\n  ],\n}\n\nexport default [\n  {\n    name: '🟥 Epifania',\n    details: zonaRossa.details,\n    from: '2021/01/05 00:00:00',\n    to: '2021/01/06 23:59:59',\n    regions: ALL_REGIONS,\n  },\n]\n","import { ALL_REGIONS } from './Constants'\nimport zonaArancione from './zonaArancione'\nimport zonaGialla from './zonaGialla'\nimport zonaRossa from './zonaRossa'\n\nconst allRules = [\n  ...zonaGialla,\n  ...zonaArancione,\n  ...zonaRossa,\n]\n\nexport function getActiveRules(selectedProvince) {\n  const now = Date.now()\n  return allRules\n    .filter(rule => !rule.to || new Date(rule.to) > now)\n    .filter(rule => rule.regions === ALL_REGIONS || rule.regions.includes(selectedProvince.regione))\n    .sort((first, second) => new Date(first.from) - new Date(second.from))\n}\n","import Box from '@material-ui/core/Box'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { getActiveRules } from '../rules'\n\nconst useStyles = makeStyles((theme) => ({\n  copyrightBox: {\n    marginTop: theme.spacing(4),\n  },\n  contributeBox: {\n    marginTop: theme.spacing(0.4),\n  },\n  cardRoot: {\n    marginBottom: theme.spacing(2),\n  },\n  dateFromTo: {\n    fontSize: 18,\n  },\n  rulesList: {\n    marginTop: 4,\n  },\n  rule: {\n    fontSize: 17,\n  },\n}))\n\nfunction parseDate(date) {\n  return new Date(date).toLocaleDateString()\n}\n\nfunction Rule({ rule }) {\n  const classes = useStyles()\n  const { from, to, details } = rule\n\n  const dateFromTo = [(from ? `Dal ${parseDate(from)}` : ''), (to ? `Al ${parseDate(to)}` : '')].join(' ')\n\n  return (\n    <Card className={classes.cardRoot} variant=\"outlined\">\n      <CardContent>\n        {dateFromTo && <Typography className={classes.dateFromTo} color=\"textPrimary\" gutterBottom>\n          📆 {dateFromTo}\n        </Typography>\n        }\n        {rule.name && <Typography variant=\"h5\" component=\"h2\">\n          {rule.name}\n        </Typography>\n        }\n\n        {details && <Typography color=\"textPrimary\" className={classes.rulesList}>\n          <List component=\"nav\" dense={true}>\n            {details.map(detail =>\n              <ListItem button key={detail}>\n                <ListItemText\n                  classes={{ primary: classes.rule }}\n                  primary={detail}\n                />\n              </ListItem>)\n            }\n          </List>\n        </Typography>\n        }\n      </CardContent>\n    </Card>\n  )\n}\nRule.propTypes = {\n  rule: PropTypes.object,\n}\n\n\nexport default function ActiveRulesList({ province }) {\n  const classes = useStyles()\n  const activeRules = getActiveRules(province)\n  return (\n    <Typography variant=\"body2\" color=\"textPrimary\" className={classes.copyrightBox} >\n      {activeRules.length === 0\n        ? <Box textAlign=\"center\" fontSize={20} color={'red'}>\n            Nessun risultato trovato.\n        </Box>\n        : activeRules.map(rule => <Rule key={province.nome + rule.from} rule={rule}/>)}\n    </Typography>\n  )\n}\nActiveRulesList.propTypes = {\n  province: PropTypes.object,\n}\n","import Box from '@material-ui/core/Box'\nimport Link from '@material-ui/core/Link'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport React, { useState } from 'react'\nimport province from '../lib/province'\nimport ActiveRulesList from './ActiveRulesList'\n\nexport default function SearchBox() {\n  const [choosenProvince, setProvince] = useState()\n\n  return (\n    <>\n      {!choosenProvince\n        ? <Box display=\"flex\" justifyContent=\"center\">\n          <Autocomplete\n            id=\"province\"\n            onChange={(_, value) => setProvince(value)}\n            options={province}\n            getOptionLabel={(option) => option.nome}\n            style={{ width: '80%', marginTop: 20 }}\n            renderInput={(params) => <TextField {...params} label=\"Provincia\" variant=\"outlined\"/>}\n          />\n        </Box>\n        : <Typography color=\"textPrimary\" fontFamily=\"Roboto\" >\n          <Box textAlign=\"left\" fontSize={15}>\n            <Link onClick={() => setProvince(null)}>\n              Cambia città\n            </Link>\n          </Box>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\">\n          📍 {choosenProvince.nome}\n          </Box>\n        </Typography>\n      }\n\n      { choosenProvince && <ActiveRulesList province={choosenProvince}/>}\n\n    </>\n  )\n}\n","import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Header from './components/Header'\nimport Disclaimer from './components/Disclaimer'\nimport SearchBox from './components/SearchBox'\n\nexport default function App() {\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={4}>\n        <Header />\n        <SearchBox/>\n        <Disclaimer />\n      </Box>\n    </Container>\n  )\n}\n","import { red } from '@material-ui/core/colors'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n})\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport App from './App'\nimport theme from './components/theme'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n\n  // eslint-disable-next-line no-undef\n  document.querySelector('#root'),\n)\n"],"sourceRoot":""}