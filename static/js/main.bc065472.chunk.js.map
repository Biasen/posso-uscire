{"version":3,"sources":["components/LanguageProvider.js","components/Header.js","components/Footer.js","lib/italianRegions.js","lib/urlUtils.js","rules/Constants.js","rules/zonaArancione.js","rules/zonaGialla.js","rules/zonaRossa.js","rules/index.js","components/ActiveRulesList.js","components/SearchBox.js","App.js","components/theme.js","index.js"],"names":["supportedLanguages","getLanguage","language","window","navigator","languages","userLanguage","substr","includes","LanguageContext","createContext","LanguageProvider","children","useState","setLanguage","Provider","value","withLanguage","useContext","useStyles","makeStyles","theme","subTitle","marginTop","spacing","marginBottom","changeLanguageBox","i18n","MAY_I_EXIT","INSERT_CITY","Header","classes","Typography","gutterBottom","Box","textAlign","fontSize","fontFamily","m","className","onClick","color","copyrightBox","contributeBox","lastUpdateBox","DISCLAIMER_1","DISCLAIMER_2","CONTRIBUTE","LAST_UPDATE","Footer","variant","align","fontWeight","Date","toLocaleDateString","Link","href","italianRegions","prettify","string","removeAccents","trim","replace","setHash","hash","encodedHash","encodeURI","history","pushState","location","hashConsumer","callable","useEffect","decodeURI","ALL_REGIONS","SICILIA","PIEMONTE","MARCHE","TOSCANA","CAMPANIA","PUGLIA","VENETO","LOMBARDIA","EMILIA_ROMAGNA","SARDEGNA","MOLISE","CALABRIA","ABRUZZO","LAZIO","LIGURIA","FRIULI_VENEZIA_GIULIA","BASILICATA","UMBRIA","VALLE_D_AOSTA","zonaArancione","name","details","moreDetails","from","to","regions","commonDetails","zonaGiallaRafforzata","cities","zonaRossa","allRules","zonaGialla","rulesComparator","thisRule","thatRule","_","isEqual","sameRulesReducer","rulesToOutput","currentRule","currentRuleIndex","rules","prevRule","isEqualWith","pop","push","cardRoot","dateFromTo","rulesList","rule","cardActions","justifyContent","FROM","TO","MORE_INFO","NO_RESULTS","parseDate","date","getLocalizedValue","elem","Rule","showMoreDetails","setShowMoreDetails","join","Card","CardContent","component","List","dense","map","detail","ListItem","button","ListItemText","primary","CardActions","root","Button","size","ActiveRulesList","province","activeRules","selectedProvince","now","filter","regione","sigla","sort","first","second","reduce","getActiveRules","length","nome","CITY","CHANGE_LANGUAGE","SearchBox","choosenRegion","setRegion","onRegionChoosen","region","urlUtils","foundRegion","find","toUpperCase","display","Autocomplete","id","onChange","options","getOptionLabel","option","style","width","renderInput","params","TextField","label","container","App","Container","maxWidth","createMuiTheme","palette","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"0NAGMA,EAAqB,CAAC,KAAM,MAU3B,SAASC,IACd,IACMC,GARFC,OAAOC,UAAUC,UACZF,OAAOC,UAAUC,UAAU,GAE7BF,OAAOC,UAAUE,cAAgBH,OAAOC,UAAUF,UAKjCK,OAAO,EAAG,GAElC,OAAIP,EAAmBQ,SAASN,GACvBA,EAda,KAmBxB,IAAMO,EAAkBC,wBAAc,MAE/B,SAASC,EAAT,GAAyC,IAAbC,EAAY,EAAZA,SAAY,EACbC,mBAASZ,KADI,mBACtCC,EADsC,KAC5BY,EAD4B,KAG7C,OACE,cAACL,EAAgBM,SAAjB,CAA0BC,MAAO,CAACd,EAAUY,GAA5C,SACGF,IAQA,SAASK,IACd,OAAOC,qBAAWT,GCjCpB,IAAMU,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,IAE9BE,kBAAmB,CACjBD,aAAcJ,EAAMG,QAAQ,QAI1BG,EAAO,CACXC,WAAY,CACV,GAAM,gBACN,GAAM,kBAERC,YAAa,CACX,GAAM,2DACN,GAAM,8CAIK,SAASC,IACtB,IAAMC,EAAUZ,IADe,EAECF,IAFD,mBAExBf,EAFwB,KAEdY,EAFc,KAI/B,OACE,qCACE,cAACkB,EAAA,EAAD,CAAYC,cAAY,EAAxB,SACE,cAACC,EAAA,EAAD,CAAKC,UAAU,SAASC,SAAS,cAAcC,WAAW,SAASC,EAAG,EAAtE,SACGX,EAAKC,WAAW1B,OAIrB,cAACgC,EAAA,EAAD,CAAKC,UAAU,SAASI,UAAWR,EAAQL,kBACzCc,QAAS,kBAAM1B,EAAyB,OAAbZ,EAAoB,KAAO,OADxD,SAEgB,OAAbA,EAAoB,6CAA2B,iDAGlD,cAAC8B,EAAA,EAAD,CAAYO,UAAWR,EAAQT,SAAUmB,MAAM,cAA/C,SACE,cAACP,EAAA,EAAD,CAAKC,UAAU,OAAOC,SAAU,GAAhC,SACGT,EAAKE,YAAY3B,U,aCpCtBiB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqB,aAAc,CACZnB,UAAWF,EAAMG,QAAQ,IACzBC,aAAcJ,EAAMG,QAAQ,IAE9BmB,cAAe,CACbpB,UAAWF,EAAMG,QAAQ,KAE3BoB,cAAe,CACbnB,aAAcJ,EAAMG,QAAQ,QAI1BG,EAAO,CACXkB,aAAc,CACZ,GAAM,uEACN,GAAM,4DAERC,aAAc,CACZ,GAAM,kDACN,GAAM,gDAERC,WAAY,CACV,GAAM,qCACN,GAAM,wBAERC,YAAa,CACX,GAAM,yBACN,GAAM,kBAIK,SAASC,IACtB,IAAMlB,EAAUZ,IADe,EAEZF,IAAZf,EAFwB,oBAI/B,OACE,eAAC8B,EAAA,EAAD,CAAYkB,QAAQ,QAAQT,MAAM,gBAAgBU,MAAM,SAASZ,UAAWR,EAAQW,aAApF,UACE,eAACR,EAAA,EAAD,CAAKK,UAAWR,EAAQa,cAAeQ,WAAW,iBAAlD,UACGzB,EAAKqB,YAAY9C,GADpB,IACgC,IAAImD,KAzC3B,eAyC2CC,wBAGpD,cAACpB,EAAA,EAAD,UACGP,EAAKkB,aAAa3C,KAErB,cAACgC,EAAA,EAAD,UACGP,EAAKmB,aAAa5C,KAGrB,cAACgC,EAAA,EAAD,CAAKK,UAAWR,EAAQY,cAAxB,SACE,cAACY,EAAA,EAAD,CAAMC,KAAK,0CAAX,SACG7B,EAAKoB,WAAW7C,U,8BC8eZuD,EAziBQ,CACrB,CACE,KAAQ,YACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,cACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,gBACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,OACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,OACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,wBACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,YACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,gBACR,MAAS,KACT,QAAW,mCAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,gBACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,aACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,oBACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,YACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,OACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,OACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,kBACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,YACR,MAAS,KACT,QAAW,SAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,yBAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,YACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,SAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,OACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,gBACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,cAEb,CACE,KAAQ,kBACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,wBACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,YACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,eACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,kBACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,OACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,YACR,MAAS,KACT,QAAW,yBAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,cAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,qBACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,qBACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,SAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,kBAEb,CACE,KAAQ,OACR,MAAS,KACT,QAAW,SAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,WAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,mCAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,yBAEb,CACE,KAAQ,QACR,MAAS,KACT,QAAW,yBAEb,CACE,KAAQ,gBACR,MAAS,KACT,QAAW,iBAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,aAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,uBACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,WACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,SACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,gBACR,MAAS,KACT,QAAW,YAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,UAEb,CACE,KAAQ,UACR,MAAS,KACT,QAAW,U,iBCpiBf,SAASC,EAASC,GAChB,OAAOC,IAAcD,EAAOE,QAAQC,QAAQ,MAAO,KAyBtC,OAAEC,QAtBjB,SAAiBC,GACf,IAAMC,EAAW,WAAOC,UAAUR,EAASM,KACvCG,QAAQC,UACVD,QAAQC,UAAU,KAAM,KAAMH,GAE9BI,SAASL,KAAOC,GAiBMK,aAT1B,SAAsBC,GACpB,OAAOC,qBAAU,WACf,IAAMR,EALDS,UAAUtE,OAAOkE,SAASL,KAAKzD,OAAO,IAMvCyD,GACFO,EAASP,KAEV,KAGmCN,Y,uEC7B3BgB,EAAc,cAEdC,EAAU,UACVC,EAAW,WACXC,EAAS,SACTC,EAAU,UACVC,EAAW,WACXC,EAAS,SACTC,EAAS,SACTC,EAAY,YACZC,EAAiB,iBAEjBC,EAAW,WACXC,EAAS,SACTC,GAAW,WACXC,GAAU,UACVC,GAAQ,QACRC,GAAU,UACVC,GAAwB,wBACxBC,GAAa,aACbC,GAAS,SACTC,GAAgB,gBCRvBC,GAAgB,CACpBC,KAAM,CACJ,GAAM,8BACN,GAAM,4BAERC,QAAS,CACP,CACE,GAAM,gGACN,GAAM,oGAER,CACE,GAAM,8BACN,GAAM,gCAER,CACE,GAAM,mEACN,GAAM,0EAER,CACE,GAAM,kDACN,GAAM,2CAER,CACE,GAAM,sFACN,GAAM,sFAER,CACE,GAAM,yEACN,GAAM,mFAER,CACE,GAAM,6IACN,GAAM,yIAGVC,YAAa,CACX,CACE,GAAM,sHACN,GAAM,sHAER,CACE,GAAM,iIACN,GAAM,6JAER,CACE,GAAM,oIACN,GAAM,mIAER,CACE,GAAM,wEACN,GAAM,6EAER,CACE,GAAM,uGACN,GAAM,4HAKG,IAAC,2BAETH,IAFQ,IAGXI,KAAM,sBACNC,GAAI,sBACJC,QAAS1B,IALE,2BAQRoB,IARQ,IASXI,KAAM,sBACNC,GAAI,sBACJC,QAAS,CAAClB,EAAWD,EAAQE,EAAgBG,GAAUX,KAX5C,2BAcRmB,IAdQ,IAeXI,KAAM,sBACNC,GAAI,sBACJC,QAAS,CAACP,GAAejB,EAAUa,GAASN,EAAgBF,EAC1DS,GAAuBF,GAAOX,EAAQe,GAAQL,GAASP,EAAQM,OCzE/De,GAAgB,CACpB,CACE,GAAM,2EACN,GAAM,yFAER,CACE,GAAM,mDACN,GAAM,mDAER,CACE,GAAM,kDACN,GAAM,2CAER,CACE,GAAM,yDACN,GAAM,qDAER,CACE,GAAM,2EACN,GAAM,sFAER,CACE,GAAM,6IACN,GAAM,yIAGJJ,GAAc,CAClB,CACE,GAAM,oIACN,GAAM,mIAER,CACE,GAAM,wEACN,GAAM,6EAER,CACE,GAAM,8EACN,GAAM,iFAoBJK,IAVI,GAAD,OACFD,GADE,CAEL,CACE,GAAM,yDACN,GAAM,wDAMiB,CAC3BN,KAAM,CACJ,GAAM,sCACN,GAAM,yCAERC,QAAQ,GAAD,OACFK,GADE,CAEL,CACE,GAAM,gEACN,GAAM,gEAGVJ,iBAGa,IAAC,2BAETK,IAFQ,IAGXJ,KAAM,sBACNC,GAAI,sBACJC,QAAS1B,IALE,2BAQR4B,IARQ,IASXJ,KAAM,sBACNC,GAAI,sBACJC,QAAS,CACPxB,EAAUC,EAAQC,EAASC,EAAUC,EF1FR,kCE2F7BI,EAAUC,EAAQE,GAASC,GAAOC,GAASC,GAC3CC,GAAYC,GAAQC,MAdX,2BAkBRS,IAlBQ,IAmBXJ,KAAM,sBACNC,GAAI,sBACJC,QAAS,CAACtB,EAASM,EAAUC,EAAQN,EAAUY,IAC/CY,OAAQ,CFvFU,SGtBhBC,GAAY,CAChBT,KAAM,CACJ,GAAM,0BACN,GAAM,yBAERC,QAAS,CACP,CACE,GAAM,gGACN,GAAM,oGAER,CACE,GAAM,gGACN,GAAM,iGAER,CACE,GAAM,mIACN,GAAM,8IAER,CACE,GAAM,kDACN,GAAM,2CAER,CACE,GAAM,qEACN,GAAM,oEAGVC,YAAa,CACX,CACE,GAAM,sHACN,GAAM,sHAER,CACE,GAAM,oIACN,GAAM,mIAER,CACE,GAAM,wEACN,GAAM,6EAER,CACE,GAAM,gHACN,GAAM,8GAER,CACE,GAAM,oIACN,GAAM,qGAER,CACE,GAAM,4DACN,GAAM,8EAKG,IAAC,2BAETO,IAFQ,IAGXT,KAAM,wBACNG,KAAM,sBACNC,GAAI,sBACJC,QAAS1B,IANE,2BASR8B,IATQ,IAUXN,KAAM,sBACNC,GAAI,sBACJC,QAAS,CAAClB,EAAWP,GACrB4B,OAAQ,CH/CW,S,oBIhBjBE,GAAQ,sBACTC,IADS,YAETZ,IAFS,YAGTU,KAGCG,GAAkB,SAACC,EAAUC,GACjC,OAAOD,GACAC,GACAC,KAAEC,QAAQH,EAASb,KAAMc,EAASd,OAClCe,KAAEC,QAAQH,EAASZ,QAASa,EAASb,UACrCc,KAAEC,QAAQH,EAASX,YAAaY,EAASZ,cAG5Ce,GAAmB,SAACC,EAAeC,EAAaC,EAAkBC,GACtE,IAAMC,EAAWD,EAAMD,EAAmB,GAO1C,OANIL,KAAEQ,YAAYJ,EAAaG,EAAUV,KACvCM,EAAcM,MACdN,EAAcO,KAAd,2BAAwBH,GAAxB,IAAkClB,GAAIe,EAAYf,OAElDc,EAAcO,KAAKN,GAEdD,GCdT,IAAM9F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqB,aAAc,CACZnB,UAAWF,EAAMG,QAAQ,IAE3BmB,cAAe,CACbpB,UAAWF,EAAMG,QAAQ,KAE3BiG,SAAU,CACRhG,aAAcJ,EAAMG,QAAQ,IAE9BkG,WAAY,CACVtF,SAAU,IAEZuF,UAAW,CACTpG,UAAW,GAEbqG,KAAM,CACJxF,SAAU,IAEZyF,YAAa,CACXC,eAAgB,SAChBrG,aAAc,QAIZE,GAAO,CACXoG,KAAM,CACJ,GAAM,KACN,GAAM,QAERC,GAAI,CACF,GAAM,KACN,GAAM,MAERC,UAAW,CACT,GAAM,mBACN,GAAM,QAERC,WAAY,CACV,GAAM,2BACN,GAAM,sBAIV,SAASC,GAAUC,GACjB,OAAO,IAAI/E,KAAK+E,GAAM9E,qBAGxB,SAAS+E,GAAkBC,GAAO,IAAD,EACZrH,IAAZf,EADwB,oBAE/B,MAAoB,kBAAToI,EACFA,EAEFA,EAAKpI,GAGd,SAASqI,GAAT,GAAyB,IAATX,EAAQ,EAARA,KAAQ,EACwB/G,oBAAS,GADjC,mBACf2H,EADe,KACEC,EADF,OAEHxH,IAAZf,EAFe,oBAGhB6B,EAAUZ,KAER+E,EAAmC0B,EAAnC1B,KAAMC,EAA6ByB,EAA7BzB,GAAIH,EAAyB4B,EAAzB5B,QAASC,EAAgB2B,EAAhB3B,YAErByB,EAAa,CAAExB,EAAI,UAAMvE,GAAKoG,KAAK7H,GAAhB,YAA6BiI,GAAUjC,IAAU,GAAMC,EAAE,UAAMxE,GAAKqG,GAAG9H,GAAd,YAA2BiI,GAAUhC,IAAQ,IAAKuC,KAAK,KAEzI,OACE,eAACC,EAAA,EAAD,CAAMpG,UAAWR,EAAQ0F,SAAUvE,QAAQ,WAA3C,UACE,eAAC0F,EAAA,EAAD,WACGlB,GAAc,eAAC1F,EAAA,EAAD,CAAYO,UAAWR,EAAQ2F,WAAYjF,MAAM,cAAcR,cAAY,EAA3E,0BACTyF,KAGLE,EAAK7B,MAAQ,cAAC/D,EAAA,EAAD,CAAYkB,QAAQ,KAAK2F,UAAU,KAAnC,SACXR,GAAkBT,EAAK7B,QAIzBC,GAAW,cAAChE,EAAA,EAAD,CAAYS,MAAM,cAAcF,UAAWR,EAAQ4F,UAAnD,SACV,cAACmB,EAAA,EAAD,CAAMD,UAAU,MAAME,OAAO,EAA7B,SACG,sBAAI/C,GAAJ,YAAiBwC,EAAkBvC,EAAc,KAAK+C,KAAI,SAAAC,GAAM,OAC/D,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CACErH,QAAS,CAAEsH,QAAStH,EAAQ6F,MAC5ByB,QAAShB,GAAkBY,MAHTA,cAW5BT,GAAmBvC,GAAe,cAACqD,EAAA,EAAD,CAAavH,QAAS,CAAEwH,KAAMxH,EAAQ8F,aAAtC,SAClC,cAAC2B,EAAA,EAAD,CAAQC,KAAK,SAAShH,MAAM,UAAUS,QAAQ,WAAWV,QAAS,kBAAMiG,GAAmB,IAA3F,SACG9G,GAAKsG,UAAU/H,UAYX,SAASwJ,GAAT,GAAwC,IAAbC,EAAY,EAAZA,SAClC5H,EAAUZ,KACVyI,ED1FD,SAAwBC,GAC7B,IAKMC,EAAMzG,KAAKyG,MACjB,OAAOrD,GACJsD,QAAO,SAAAnC,GAAI,OAAKA,EAAKzB,IAAM,IAAI9C,KAAKuE,EAAKzB,IAAM2D,KAC/CC,QARsB,SAAAnC,GAAI,OAC3BA,EAAKxB,UAAY1B,GACbkD,EAAKxB,SAAWwB,EAAKxB,QAAQ5F,SAASqJ,EAAiBG,UACvDpC,EAAKrB,QAAUqB,EAAKrB,OAAO/F,SAASqJ,EAAiBI,UAMxDC,MAAK,SAACC,EAAOC,GAAR,OAAmB,IAAI/G,KAAK8G,EAAMjE,MAAQ,IAAI7C,KAAK+G,EAAOlE,SAC/DmE,OAAOrD,GAAkB,IC+ERsD,CAAeX,GAFiB,EAGjC1I,IAAZf,EAH6C,oBAKpD,OACE,cAAC8B,EAAA,EAAD,CAAYkB,QAAQ,QAAQT,MAAM,cAAcF,UAAWR,EAAQW,aAAnE,SAC0B,IAAvBkH,EAAYW,OACT,cAACrI,EAAA,EAAD,CAAKC,UAAU,SAASC,SAAU,GAAIK,MAAO,MAA7C,SACCd,GAAKuG,WAAWhI,KAEjB0J,EAAYZ,KAAI,SAAApB,GAAI,OAAI,cAACW,GAAD,CAAuDX,KAAMA,GAA7D,UAAc+B,EAASa,KAAvB,YAA+B5C,EAAK1B,KAApC,YAA4C0B,EAAKzB,UCxHnF,IAAMxE,GAAO,CACX8I,KAAM,CACJ,GAAM,YACN,GAAM,QAERC,gBAAiB,CACf,GAAM,mBACN,GAAM,gBAIK,SAASC,KAAa,IAAD,EACC9J,qBADD,mBAC3B+J,EAD2B,KACZC,EADY,OAEf5J,IAAZf,EAF2B,oBAK5B4K,EAAkB,SAACC,GACvBF,EAAUE,GACVC,EAASjH,SAAc,OAANgH,QAAM,IAANA,OAAA,EAAAA,EAAQP,OAAQ,KAYnC,OATAQ,EAAS1G,cAAa,SAACN,GACrB,IAAMiH,EAAc7E,EAAQ8E,MAC1B,SAAAH,GAAM,OAAIC,EAAStH,SAASqH,EAAOP,KAAK3G,QAAQsH,gBAAkBnH,EAAKmH,cAActH,UAEnFoH,GACFJ,EAAUI,MAKZ,qCACIL,EAWE,eAAC5I,EAAA,EAAD,CAAYS,MAAM,cAAcJ,WAAW,SAA3C,UACA,cAACH,EAAA,EAAD,CAAKC,UAAU,OAAOC,SAAU,GAAhC,SACE,cAACmB,EAAA,EAAD,CAAMf,QAAS,kBAAMsI,EAAgB,OAArC,SACGnJ,GAAK+I,gBAAgBxK,OAG1B,eAACgC,EAAA,EAAD,CAAKC,UAAU,SAASC,SAAS,cAAjC,0BACIwI,EAAcJ,WAjBlB,cAACtI,EAAA,EAAD,CAAKkJ,QAAQ,OAAOtD,eAAe,SAAnC,SACA,cAACuD,EAAA,EAAD,CACEC,GAAG,WACHC,SAAU,SAACzE,EAAG9F,GAAJ,OAAc8J,EAAgB9J,IACxCwK,QAASpF,EACTqF,eAAgB,SAACC,GAAD,OAAYA,EAAOlB,MACnCmB,MAAO,CAAEC,MAAO,MAAOrK,UAAW,IAClCsK,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAOrK,GAAK8I,KAAKvK,GAAWgD,QAAQ,mBAexF0H,GAAiB,cAAClB,GAAD,CAAiBC,SAAUiB,OC3DpD,IAAMzJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4K,UAAW,CACT1K,UAAWF,EAAMG,QAAQ,QAId,SAAS0K,KACtB,IAAMnK,EAAUZ,KAChB,OACE,eAACgL,EAAA,EAAD,CAAWC,SAAS,KAAK7J,UAAWR,EAAQkK,UAA5C,UACE,cAACnK,EAAD,IACA,cAAC6I,GAAD,IACA,cAAC1H,EAAD,O,sBCCS5B,GAjBDgL,aAAe,CAC3BC,QAAS,CACPjD,QAAS,CACPkD,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,KAAIC,MAEZC,WAAY,CACVC,QAAS,WCPfC,IAASC,OACP,eAACC,EAAA,EAAD,CAAe3L,MAAOA,GAAtB,UACE,cAAC4L,EAAA,EAAD,IACA,cAACtM,EAAD,UACE,cAACuL,GAAD,SAKJgB,SAASC,cAAc,Y","file":"static/js/main.bc065472.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { createContext, useContext, useState } from 'react'\n\nconst supportedLanguages = ['it', 'en']\nconst defaultLanguage = 'en'\n\nfunction getLocale() {\n  if (window.navigator.languages) {\n    return window.navigator.languages[0]\n  }\n  return window.navigator.userLanguage || window.navigator.language\n}\n\nexport function getLanguage() {\n  const locale = getLocale()\n  const language = locale.substr(0, 2)\n\n  if (supportedLanguages.includes(language)) {\n    return language\n  }\n  return defaultLanguage\n}\n\nconst LanguageContext = createContext(null)\n\nexport function LanguageProvider({ children }) {\n  const [language, setLanguage] = useState(getLanguage())\n\n  return (\n    <LanguageContext.Provider value={[language, setLanguage]}>\n      {children}\n    </LanguageContext.Provider>\n  )\n}\nLanguageProvider.propTypes = {\n  children: PropTypes.object,\n}\n\nexport function withLanguage() {\n  return useContext(LanguageContext)\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport { withLanguage } from './LanguageProvider'\n\nconst useStyles = makeStyles((theme) => ({\n  subTitle: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(1),\n  },\n  changeLanguageBox: {\n    marginBottom: theme.spacing(1),\n  },\n}))\n\nconst i18n = {\n  MAY_I_EXIT: {\n    'it': 'Posso uscire?',\n    'en': 'Can I get out?',\n  },\n  INSERT_CITY: {\n    'it': 'Inserisci la tua provincia per conoscere le restrizioni.',\n    'en': 'Enter your city to know the restrictions.',\n  },\n}\n\nexport default function Header() {\n  const classes = useStyles()\n  const [language, setLanguage] = withLanguage()\n\n  return (\n    <>\n      <Typography gutterBottom>\n        <Box textAlign=\"center\" fontSize=\"h3.fontSize\" fontFamily=\"Roboto\" m={1}>\n          {i18n.MAY_I_EXIT[language]}\n        </Box>\n      </Typography>\n\n      <Box textAlign=\"center\" className={classes.changeLanguageBox}\n        onClick={() => setLanguage(language === 'it' ? 'en' : 'it')}>\n        {language === 'it' ? '🇩🇬 Switch to English' : '🇮🇹 Passa all\\' Italiano'}\n      </Box>\n\n      <Typography className={classes.subTitle} color=\"textPrimary\">\n        <Box textAlign=\"left\" fontSize={20}>\n          {i18n.INSERT_CITY[language]}\n        </Box>\n\n      </Typography>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Link from '@material-ui/core/Link'\nimport React from 'react'\nimport { withLanguage } from './LanguageProvider'\nimport preval from 'preval.macro'\n\nconst buildTime = preval `module.exports = Date.now();`\n\nconst useStyles = makeStyles((theme) => ({\n  copyrightBox: {\n    marginTop: theme.spacing(10),\n    marginBottom: theme.spacing(5),\n  },\n  contributeBox: {\n    marginTop: theme.spacing(0.7),\n  },\n  lastUpdateBox: {\n    marginBottom: theme.spacing(1),\n  },\n}))\n\nconst i18n = {\n  DISCLAIMER_1: {\n    'it': 'Le informazioni fornite potrebbero essere incomplete o non corrette.',\n    'en': 'The information provided may be incomplete or incorrect.',\n  },\n  DISCLAIMER_2: {\n    'it': 'Attenersi sempre a fonti governative ufficiali.',\n    'en': 'Always stick to official government sources.',\n  },\n  CONTRIBUTE: {\n    'it': 'Contribuisci al progetto su Github',\n    'en': 'Contribute on Github',\n  },\n  LAST_UPDATE: {\n    'it': 'Ultimo aggiornamento: ',\n    'en': 'Last update: ',\n  },\n}\n\nexport default function Footer() {\n  const classes = useStyles()\n  const [language] = withLanguage()\n\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.copyrightBox}>\n      <Box className={classes.lastUpdateBox} fontWeight=\"fontWeightBold\">\n        {i18n.LAST_UPDATE[language]} {new Date(buildTime).toLocaleDateString()}\n      </Box>\n\n      <Box>\n        {i18n.DISCLAIMER_1[language]}\n      </Box>\n      <Box>\n        {i18n.DISCLAIMER_2[language]}\n      </Box>\n\n      <Box className={classes.contributeBox}>\n        <Link href=\"http://github.com/Guglio95/posso-uscire\">\n          {i18n.CONTRIBUTE[language]}\n        </Link>\n      </Box>\n    </Typography>\n  )\n}\n","/* eslint-disable */\n/* https://gist.github.com/stockmind/8bcbbf9ac41bc196401b96084ec8c5d3 */\nconst italianRegions = [\n  {\n    'nome': 'Agrigento',\n    'sigla': 'AG',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Alessandria',\n    'sigla': 'AL',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Ancona',\n    'sigla': 'AN',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Arezzo',\n    'sigla': 'AR',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Ascoli Piceno',\n    'sigla': 'AP',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Asti',\n    'sigla': 'AT',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Avellino',\n    'sigla': 'AV',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Bari',\n    'sigla': 'BA',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Barletta-Andria-Trani',\n    'sigla': 'BT',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Belluno',\n    'sigla': 'BL',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Benevento',\n    'sigla': 'BN',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Bergamo',\n    'sigla': 'BG',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Biella',\n    'sigla': 'BI',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Bologna',\n    'sigla': 'BO',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Bolzano/Bozen',\n    'sigla': 'BZ',\n    'regione': 'Trentino-Alto Adige/Südtirol',\n  },\n  {\n    'nome': 'Brescia',\n    'sigla': 'BS',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Brindisi',\n    'sigla': 'BR',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Cagliari',\n    'sigla': 'CA',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Caltanissetta',\n    'sigla': 'CL',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Campobasso',\n    'sigla': 'CB',\n    'regione': 'Molise',\n  },\n  {\n    'nome': 'Carbonia-Iglesias',\n    'sigla': 'CI',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Caserta',\n    'sigla': 'CE',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Catania',\n    'sigla': 'CT',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Catanzaro',\n    'sigla': 'CZ',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Chieti',\n    'sigla': 'CH',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Como',\n    'sigla': 'CO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Cosenza',\n    'sigla': 'CS',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Cremona',\n    'sigla': 'CR',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Crotone',\n    'sigla': 'KR',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Cuneo',\n    'sigla': 'CN',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Enna',\n    'sigla': 'EN',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Fermo',\n    'sigla': 'FM',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Ferrara',\n    'sigla': 'FE',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Firenze',\n    'sigla': 'FI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Foggia',\n    'sigla': 'FG',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Forlì-Cesena',\n    'sigla': 'FC',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Frosinone',\n    'sigla': 'FR',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Genova',\n    'sigla': 'GE',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Gorizia',\n    'sigla': 'GO',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Grosseto',\n    'sigla': 'GR',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Imperia',\n    'sigla': 'IM',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Isernia',\n    'sigla': 'IS',\n    'regione': 'Molise',\n  },\n  {\n    'nome': \"L'Aquila\",\n    'sigla': 'AQ',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'La Spezia',\n    'sigla': 'SP',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Latina',\n    'sigla': 'LT',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Lecce',\n    'sigla': 'LE',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Lecco',\n    'sigla': 'LC',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Livorno',\n    'sigla': 'LI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Lodi',\n    'sigla': 'LO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Lucca',\n    'sigla': 'LU',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Macerata',\n    'sigla': 'MC',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Mantova',\n    'sigla': 'MN',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Massa-Carrara',\n    'sigla': 'MS',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Matera',\n    'sigla': 'MT',\n    'regione': 'Basilicata',\n  },\n  {\n    'nome': 'Medio Campidano',\n    'sigla': 'VS',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Messina',\n    'sigla': 'ME',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Milano',\n    'sigla': 'MI',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Modena',\n    'sigla': 'MO',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Monza e della Brianza',\n    'sigla': 'MB',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Napoli',\n    'sigla': 'NA',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Novara',\n    'sigla': 'NO',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Nuoro',\n    'sigla': 'NU',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Ogliastra',\n    'sigla': 'OG',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Olbia-Tempio',\n    'sigla': 'OT',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Oristano',\n    'sigla': 'OR',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Padova',\n    'sigla': 'PD',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Palermo',\n    'sigla': 'PA',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Parma',\n    'sigla': 'PR',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Pavia',\n    'sigla': 'PV',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Perugia',\n    'sigla': 'PG',\n    'regione': 'Umbria',\n  },\n  {\n    'nome': 'Pesaro e Urbino',\n    'sigla': 'PU',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Pescara',\n    'sigla': 'PE',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Piacenza',\n    'sigla': 'PC',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Pisa',\n    'sigla': 'PI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Pistoia',\n    'sigla': 'PT',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Pordenone',\n    'sigla': 'PN',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Potenza',\n    'sigla': 'PZ',\n    'regione': 'Basilicata',\n  },\n  {\n    'nome': 'Prato',\n    'sigla': 'PO',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Ragusa',\n    'sigla': 'RG',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Ravenna',\n    'sigla': 'RA',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Reggio di Calabria',\n    'sigla': 'RC',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': \"Reggio nell'Emilia\",\n    'sigla': 'RE',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Rieti',\n    'sigla': 'RI',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Rimini',\n    'sigla': 'RN',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Roma',\n    'sigla': 'RM',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Rovigo',\n    'sigla': 'RO',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Salerno',\n    'sigla': 'SA',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Sassari',\n    'sigla': 'SS',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Savona',\n    'sigla': 'SV',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Siena',\n    'sigla': 'SI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Siracusa',\n    'sigla': 'SR',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Sondrio',\n    'sigla': 'SO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Taranto',\n    'sigla': 'TA',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Teramo',\n    'sigla': 'TE',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Terni',\n    'sigla': 'TR',\n    'regione': 'Umbria',\n  },\n  {\n    'nome': 'Torino',\n    'sigla': 'TO',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Trapani',\n    'sigla': 'TP',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Trento',\n    'sigla': 'TN',\n    'regione': 'Trentino-Alto Adige/Südtirol',\n  },\n  {\n    'nome': 'Treviso',\n    'sigla': 'TV',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Trieste',\n    'sigla': 'TS',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Udine',\n    'sigla': 'UD',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': \"Valle d'Aosta\",\n    'sigla': 'AO',\n    'regione': \"Valle d'Aosta\",\n  },\n  {\n    'nome': 'Varese',\n    'sigla': 'VA',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Venezia',\n    'sigla': 'VE',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Verbano-Cusio-Ossola',\n    'sigla': 'VB',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Vercelli',\n    'sigla': 'VC',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Verona',\n    'sigla': 'VR',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Vibo Valentia',\n    'sigla': 'VV',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Vicenza',\n    'sigla': 'VI',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Viterbo',\n    'sigla': 'VT',\n    'regione': 'Lazio',\n  },\n]\n\nexport default italianRegions\n","import { useEffect } from 'react'\nimport removeAccents from 'remove-accents'\n\nfunction prettify(string) {\n  return removeAccents(string.trim()).replace(/ +/g, '-')\n}\n\nfunction setHash(hash) {\n  const encodedHash = `#${encodeURI(prettify(hash))}`\n  if (history.pushState) {\n    history.pushState(null, null, encodedHash)\n  } else {\n    location.hash = encodedHash\n  }\n}\n\nfunction getHash() {\n  return decodeURI(window.location.hash.substr(1))\n}\n\nfunction hashConsumer(callable) {\n  return useEffect(() => {\n    const hash = getHash()\n    if (hash) {\n      callable(hash)\n    }\n  }, [])\n}\n\nexport default { setHash, hashConsumer, prettify }\n","export const ALL_REGIONS = 'ALL_REGIONS'\n\nexport const SICILIA = 'Sicilia'\nexport const PIEMONTE = 'Piemonte'\nexport const MARCHE = 'Marche'\nexport const TOSCANA = 'Toscana'\nexport const CAMPANIA = 'Campania'\nexport const PUGLIA = 'Puglia'\nexport const VENETO = 'Veneto'\nexport const LOMBARDIA = 'Lombardia'\nexport const EMILIA_ROMAGNA = 'Emilia-Romagna'\nexport const TRENTINO_ALTO_ADIGE = 'Trentino-Alto Adige/Südtirol'\nexport const SARDEGNA = 'Sardegna'\nexport const MOLISE = 'Molise'\nexport const CALABRIA = 'Calabria'\nexport const ABRUZZO = 'Abruzzo'\nexport const LAZIO = 'Lazio'\nexport const LIGURIA = 'Liguria'\nexport const FRIULI_VENEZIA_GIULIA = 'Friuli-Venezia Giulia'\nexport const BASILICATA = 'Basilicata'\nexport const UMBRIA = 'Umbria'\nexport const VALLE_D_AOSTA = \"Valle d'Aosta\"\n\nexport const BOLZANO = 'BZ'\nexport const TRENTO = 'TN'\n","import {\n  ABRUZZO,\n  ALL_REGIONS,\n  CALABRIA,\n  EMILIA_ROMAGNA, FRIULI_VENEZIA_GIULIA, LAZIO,\n  LIGURIA,\n  LOMBARDIA, MARCHE,\n  PIEMONTE, PUGLIA,\n  SICILIA, UMBRIA,\n  VALLE_D_AOSTA,\n  VENETO,\n} from './Constants'\n\nconst zonaArancione = {\n  name: {\n    'it': '🟧 Zona Arancione',\n    'en': '🟧 Orange Zone',\n  },\n  details: [\n    {\n      'it': '🚫 Bar, ristoranti chiusi tranne che per asporto rispettivamente fino alle 18 e 22.',\n      'en': '🚫 Bar and resturants open just for take-away service until 6pm and 10pm respectively.',\n    },\n    {\n      'it': '🛍 Negozi aperti.',\n      'en': '🛍 Shops are open.',\n    },\n    {\n      'it': '❌ Centri commerciali chiusi durante i festivi e prefestivi.',\n      'en': '❌ Shopping malls are closed on holidays and days before holidays.',\n    },\n    {\n      'it': '🛏 Coprifuoco dalle 22.00 alle 05.00.',\n      'en': '🛏 Curfew from 10 PM to 5 AM.',\n    },\n    {\n      'it': '📝 Serve l\\'autocertificazione per gli spostamenti al di fuori del comune.',\n      'en': '📝 Self-certification is needed to justify shifts across municipalities.',\n    },\n    {\n      'it': '🌎 Puoi andare nella seconda casa ma solo se nel tuo comune.',\n      'en': '🌎 You can travel to the second home just if it is in your same town.',\n    },\n    {\n      'it': '⛔️ Non si possono superare i confini della regione salvo per esigenze lavorative, situazioni di necessità o motivi di salute.',\n      'en': '⛔️ It is not allowed to cross the boundaries of the region except for work needs, mandatory necessities or health reasons.',\n    },\n  ],\n  moreDetails: [\n    {\n      'it': '👭 Si può uscire dal comune per comprovate esigenze di lavoro, di salute o situazione di necessità.',\n      'en': '👭 Shifts across municipalities are allowed for work requirements, health needs, and situations of need.',\n    },\n    {\n      'it': '🛒 Si può uscire dal comune per fruire di servizi altrimenti non disponibili o economicamente più convenienti.',\n      'en': '🛒 It is allowed to travel between different municipalities to access services which are not-available/more-expensive in your own municipality.',\n    },\n    {\n      'it': '🏚 Consentito il rientro alla propria residenza, domicilio o abitazione ad esclusione delle seconde case fuori regione.',\n      'en': '🏚 The return to one\\'s residence, domicile or home is allowed, with the exception of second homes outside the region.',\n    },\n    {\n      'it': '⛪ Consentito l\\' accesso ai luoghi di culto e funzioni religiose.',\n      'en': '⛪ It is allowed to access places of worship and religious functions.',\n    },\n    {\n      'it': '🏃 Consentito svolgere attività sportiva e motoria all\\'aperto, senza uscire dal comune.',\n      'en': '🏃 It is allowed to carry out outdoor sports and motor activities, without crossing municipality boundaries.',\n    },\n  ],\n}\n\nexport default [\n  {\n    ...zonaArancione,\n    from: '2021/01/09 00:00:00',\n    to: '2021/01/10 23:59:59',\n    regions: ALL_REGIONS,\n  },\n  {\n    ...zonaArancione,\n    from: '2021/01/11 00:00:00',\n    to: '2021/01/15 23:59:59',\n    regions: [LOMBARDIA, VENETO, EMILIA_ROMAGNA, CALABRIA, SICILIA],\n  },\n  {\n    ...zonaArancione,\n    from: '2021/01/16 00:00:00',\n    to: '2021/02/15 23:59:59',\n    regions: [VALLE_D_AOSTA, PIEMONTE, LIGURIA, EMILIA_ROMAGNA, VENETO,\n      FRIULI_VENEZIA_GIULIA, LAZIO, MARCHE, UMBRIA, ABRUZZO, PUGLIA, CALABRIA],\n  },\n]\n","import {\n  ABRUZZO,\n  ALL_REGIONS,\n  BASILICATA,\n  CAMPANIA,\n  FRIULI_VENEZIA_GIULIA,\n  LAZIO,\n  LIGURIA,\n  MARCHE,\n  MOLISE,\n  PIEMONTE,\n  PUGLIA,\n  SARDEGNA,\n  TOSCANA,\n  TRENTINO_ALTO_ADIGE, TRENTO, UMBRIA, VALLE_D_AOSTA,\n} from './Constants'\n\nconst commonDetails = [\n  {\n    'it': '🍻 Bar e ristoranti aperti fino alle 18. Asporto fino alle 22.',\n    'en': '🍻 Bar and resturants are open until 6 PM. Take-away available until 10 PM.',\n  },\n  {\n    'it': '🛍 Negozi e centri commerciali aperti.',\n    'en': '🛍 Shops and shopping malls are open.',\n  },\n  {\n    'it': '🛏 Coprifuoco dalle 22.00 alle 05.00.',\n    'en': '🛏 Curfew from 10 PM to 5 AM.',\n  },\n  {\n    'it': '❇️ Musei aperti dal Lunedì al Venerdì.',\n    'en': '❇️  Museums open from Monday to Friday.',\n  },\n  {\n    'it': '📝 Ci si può muovere liberamente, senza autocertificazione.',\n    'en': '📝 It is allowed to have shifts without carrying the self-certification.',\n  },\n  {\n    'it': '⛔️ Non si possono superare i confini della regione salvo per esigenze lavorative, situazioni di necessità o motivi di salute.',\n    'en': '⛔️ It is not allowed to cross the boundaries of the region except for work needs, mandatory necessities or health reasons.',\n  },\n]\nconst moreDetails = [\n  {\n    'it': '🏚 Consentito il rientro alla propria residenza, domicilio o abitazione ad esclusione delle seconde case fuori regione.',\n    'en': '🏚 The return to one\\'s residence, domicile or home is allowed, with the exception of second homes outside the region.',\n  },\n  {\n    'it': '⛪ Consentito l\\' accesso ai luoghi di culto e funzioni religiose.',\n    'en': '⛪ It is allowed to access places of worship and religious functions.',\n  },\n  {\n    'it': '🏃 Consentito svolgere attività sportiva e motoria all\\'aperto.',\n    'en': '🏃 It is allowed to carry out outdoor sports and motor activities.',\n  },\n]\n\n// eslint-disable-next-line no-unused-vars\nconst zonaGialla = {\n  name: {\n    'it': '🟨 Zona Gialla',\n    'en': '🟨 Yellow Zone',\n  },\n  details: [\n    ...commonDetails,\n    {\n      'it': '✅ Consentiti spostamenti in altre regioni gialle.',\n      'en': '✅ Shifts to other yellow regions are allowed.',\n    },\n  ],\n  moreDetails,\n}\n\nconst zonaGiallaRafforzata = {\n  name: {\n    'it': '🟨 Zona Gialla Rafforzata',\n    'en': '🟨 Strengthened Yellow Zone',\n  },\n  details: [\n    ...commonDetails,\n    {\n      'it': '🚫 Non si possono superare i confini della regione.',\n      'en': '🚫 Shifts towards other regions are not allowed.',\n    },\n  ],\n  moreDetails,\n}\n\nexport default [\n  {\n    ...zonaGiallaRafforzata,\n    from: '2021/01/07 00:00:00',\n    to: '2021/01/08 23:59:59',\n    regions: ALL_REGIONS,\n  },\n  {\n    ...zonaGiallaRafforzata,\n    from: '2021/01/11 00:00:00',\n    to: '2021/01/15 23:59:59',\n    regions: [\n      PIEMONTE, MARCHE, TOSCANA, CAMPANIA, PUGLIA, TRENTINO_ALTO_ADIGE,\n      SARDEGNA, MOLISE, ABRUZZO, LAZIO, LIGURIA, FRIULI_VENEZIA_GIULIA,\n      BASILICATA, UMBRIA, VALLE_D_AOSTA,\n    ],\n  },\n  {\n    ...zonaGiallaRafforzata,\n    from: '2021/01/16 00:00:00',\n    to: '2021/02/15 23:59:59',\n    regions: [TOSCANA, SARDEGNA, MOLISE, CAMPANIA, BASILICATA],\n    cities: [TRENTO],\n  },\n]\n","import { ALL_REGIONS, BOLZANO, LOMBARDIA, SICILIA } from './Constants'\n\nconst zonaRossa = {\n  name: {\n    'it': '🟥 Zona Rossa',\n    'en': '🟥 Red Zone',\n  },\n  details: [\n    {\n      'it': '🚫 Bar, ristoranti chiusi tranne che per asporto rispettivamente fino alle 18 e 22.',\n      'en': '🚫 Bar and resturants open just for take-away service until 6pm and 10pm respectively.',\n    },\n    {\n      'it': '🛍 Negozi e mercati chiusi ad esclusione di generi alimentati e prima necessità.',\n      'en': '🛍 All the shops and markets are closed except for groceries and convinence stores.',\n    },\n    {\n      'it': '👭 Si può uscire (al massimo in coppia) per raggiungere amici e parenti una volta al giorno. Senza cambiare comune.',\n      'en': '👭 It is allowed to travel (not more than 2 people at a time) to friends and relatives once a day without changing municipality.',\n    },\n    {\n      'it': '🛏 Coprifuoco dalle 22.00 alle 05.00.',\n      'en': '🛏 Curfew from 10 PM to 5 AM.',\n    },\n    {\n      'it': '📝 Serve l\\'autocertificazione per qualsiasi spostamento.',\n      'en': '📝 Self-certification is needed to justify any shift.',\n    },\n  ],\n  moreDetails: [\n    {\n      'it': '👭 Si può uscire dal comune per comprovate esigenze di lavoro, di salute o situazione di necessità.',\n      'en': '👭 Shifts across municipalities are allowed for work requirements, health needs, and situations of need.',\n    },\n    {\n      'it': '🏚 Consentito il rientro alla propria residenza, domicilio o abitazione ad esclusione delle seconde case fuori regione.',\n      'en': '🏚 The return to one\\'s residence, domicile or home is allowed, with the exception of second homes outside the region.',\n    },\n    {\n      'it': '⛪ Consentito l\\' accesso ai luoghi di culto e funzioni religiose.',\n      'en': '⛪ It is allowed to access places of worship and religious functions.',\n    },\n    {\n      'it': '🏃 Consentito svolgere attività sportiva (correre) esclusivamente all\\'aperto ed individualmente.',\n      'en': '🏃 It is allowed to carry out sports activities (running) exclusively outdoors and individually.',\n    },\n    {\n      'it': '🚶 Consentito svolgere attività motoria (camminare) in prossimità della propria abitazione, con mascherina.‍',\n      'en': '🚶 It is allowed to carry out motor activities (walking) near your home, with the mask.',\n    },\n    {\n      'it': '✅ Aperte edicole, tabaccai, farmacie e parafarmacie.',\n      'en': '✅ Newsstand, tobacconists, pharmacies, and parapharmacies are open.',\n    },\n  ],\n}\n\nexport default [\n  {\n    ...zonaRossa,\n    name: '🟥 Epifania',\n    from: '2021/01/05 00:00:00',\n    to: '2021/01/06 23:59:59',\n    regions: ALL_REGIONS,\n  },\n  {\n    ...zonaRossa,\n    from: '2021/01/16 00:00:00',\n    to: '2021/02/15 23:59:59',\n    regions: [LOMBARDIA, SICILIA],\n    cities: [BOLZANO],\n  },\n]\n","import { ALL_REGIONS } from './Constants'\nimport zonaArancione from './zonaArancione'\nimport zonaGialla from './zonaGialla'\nimport zonaRossa from './zonaRossa'\nimport _ from 'lodash'\n\n\nconst allRules = [\n  ...zonaGialla,\n  ...zonaArancione,\n  ...zonaRossa,\n]\n\nconst rulesComparator = (thisRule, thatRule) => {\n  return thisRule\n      && thatRule\n      && _.isEqual(thisRule.name, thatRule.name)\n      && _.isEqual(thisRule.details, thatRule.details)\n      && _.isEqual(thisRule.moreDetails, thatRule.moreDetails)\n}\n\nconst sameRulesReducer = (rulesToOutput, currentRule, currentRuleIndex, rules) => {\n  const prevRule = rules[currentRuleIndex - 1]\n  if (_.isEqualWith(currentRule, prevRule, rulesComparator)) {\n    rulesToOutput.pop()\n    rulesToOutput.push({ ...prevRule, to: currentRule.to })\n  } else {\n    rulesToOutput.push(currentRule)\n  }\n  return rulesToOutput\n}\n\nexport function getActiveRules(selectedProvince) {\n  const ruleByZoneFilter = rule =>\n    rule.regions === ALL_REGIONS\n    || (rule.regions && rule.regions.includes(selectedProvince.regione))\n    || (rule.cities && rule.cities.includes(selectedProvince.sigla))\n\n  const now = Date.now()\n  return allRules\n    .filter(rule => !rule.to || new Date(rule.to) > now)\n    .filter(ruleByZoneFilter)\n    .sort((first, second) => new Date(first.from) - new Date(second.from))\n    .reduce(sameRulesReducer, [])\n}\n","import Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport { getActiveRules } from '../rules'\nimport { withLanguage } from './LanguageProvider'\n\nconst useStyles = makeStyles((theme) => ({\n  copyrightBox: {\n    marginTop: theme.spacing(4),\n  },\n  contributeBox: {\n    marginTop: theme.spacing(0.4),\n  },\n  cardRoot: {\n    marginBottom: theme.spacing(2),\n  },\n  dateFromTo: {\n    fontSize: 18,\n  },\n  rulesList: {\n    marginTop: 4,\n  },\n  rule: {\n    fontSize: 17,\n  },\n  cardActions: {\n    justifyContent: 'center',\n    marginBottom: 10,\n  },\n}))\n\nconst i18n = {\n  FROM: {\n    'it': 'Da',\n    'en': 'From',\n  },\n  TO: {\n    'it': 'al',\n    'en': 'to',\n  },\n  MORE_INFO: {\n    'it': 'Scopri di più',\n    'en': 'More',\n  },\n  NO_RESULTS: {\n    'it': 'Nessun risultato trovato',\n    'en': 'Nothing was found',\n  },\n}\n\nfunction parseDate(date) {\n  return new Date(date).toLocaleDateString()\n}\n\nfunction getLocalizedValue(elem) {\n  const [language] = withLanguage()\n  if (typeof elem === 'string') {\n    return elem\n  }\n  return elem[language]\n}\n\nfunction Rule({ rule }) {\n  const [showMoreDetails, setShowMoreDetails] = useState(false)\n  const [language] = withLanguage()\n  const classes = useStyles()\n\n  const { from, to, details, moreDetails } = rule\n\n  const dateFromTo = [(from ? `${i18n.FROM[language]} ${parseDate(from)}` : ''), (to ? `${i18n.TO[language]} ${parseDate(to)}` : '')].join(' ')\n\n  return (\n    <Card className={classes.cardRoot} variant=\"outlined\">\n      <CardContent>\n        {dateFromTo && <Typography className={classes.dateFromTo} color=\"textPrimary\" gutterBottom>\n          📆 {dateFromTo}\n        </Typography>\n        }\n        {rule.name && <Typography variant=\"h5\" component=\"h2\">\n          {getLocalizedValue(rule.name)}\n        </Typography>\n        }\n\n        {details && <Typography color=\"textPrimary\" className={classes.rulesList}>\n          <List component=\"nav\" dense={true}>\n            {[...details, ...(showMoreDetails ? moreDetails : [])].map(detail =>\n              <ListItem button key={detail}>\n                <ListItemText\n                  classes={{ primary: classes.rule }}\n                  primary={getLocalizedValue(detail)}\n                />\n              </ListItem>)\n            }\n          </List>\n        </Typography>\n        }\n      </CardContent>\n      {!showMoreDetails && moreDetails && <CardActions classes={{ root: classes.cardActions }}>\n        <Button size=\"medium\" color=\"primary\" variant=\"outlined\" onClick={() => setShowMoreDetails(true)}>\n          {i18n.MORE_INFO[language]}\n        </Button>\n      </CardActions>\n      }\n    </Card>\n  )\n}\nRule.propTypes = {\n  rule: PropTypes.object,\n}\n\n\nexport default function ActiveRulesList({ province }) {\n  const classes = useStyles()\n  const activeRules = getActiveRules(province)\n  const [language] = withLanguage()\n\n  return (\n    <Typography variant=\"body2\" color=\"textPrimary\" className={classes.copyrightBox} >\n      {activeRules.length === 0\n        ? <Box textAlign=\"center\" fontSize={20} color={'red'}>\n          {i18n.NO_RESULTS[language]}\n        </Box>\n        : activeRules.map(rule => <Rule key={`${province.nome}-${rule.from}-${rule.to}`} rule={rule}/>)}\n    </Typography>\n  )\n}\nActiveRulesList.propTypes = {\n  province: PropTypes.object,\n}\n","import Box from '@material-ui/core/Box'\nimport Link from '@material-ui/core/Link'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport React, { useState } from 'react'\nimport regions from '../lib/italianRegions'\nimport urlUtils from '../lib/urlUtils'\nimport ActiveRulesList from './ActiveRulesList'\nimport { withLanguage } from './LanguageProvider'\n\nconst i18n = {\n  CITY: {\n    'it': 'Provincia',\n    'en': 'City',\n  },\n  CHANGE_LANGUAGE: {\n    'it': 'Cambia provincia',\n    'en': 'Change city',\n  },\n}\n\nexport default function SearchBox() {\n  const [choosenRegion, setRegion] = useState()\n  const [language] = withLanguage()\n\n\n  const onRegionChoosen = (region) => {\n    setRegion(region)\n    urlUtils.setHash(region?.nome || '')\n  }\n\n  urlUtils.hashConsumer((hash) => {\n    const foundRegion = regions.find(\n      region => urlUtils.prettify(region.nome.trim()).toUpperCase() === hash.toUpperCase().trim()\n    )\n    if (foundRegion) {\n      setRegion(foundRegion)\n    }\n  })\n\n  return (\n    <>\n      {!choosenRegion\n        ? <Box display=\"flex\" justifyContent=\"center\">\n          <Autocomplete\n            id=\"province\"\n            onChange={(_, value) => onRegionChoosen(value)}\n            options={regions}\n            getOptionLabel={(option) => option.nome}\n            style={{ width: '80%', marginTop: 20 }}\n            renderInput={(params) => <TextField {...params} label={i18n.CITY[language]} variant=\"outlined\"/>}\n          />\n        </Box>\n        : <Typography color=\"textPrimary\" fontFamily=\"Roboto\" >\n          <Box textAlign=\"left\" fontSize={15}>\n            <Link onClick={() => onRegionChoosen(null)}>\n              {i18n.CHANGE_LANGUAGE[language]}\n            </Link>\n          </Box>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\">\n          📍 {choosenRegion.nome}\n          </Box>\n        </Typography>\n      }\n\n      { choosenRegion && <ActiveRulesList province={choosenRegion}/>}\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport Container from '@material-ui/core/Container'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport SearchBox from './components/SearchBox'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(5),\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Header />\n      <SearchBox/>\n      <Footer />\n    </Container>\n  )\n}\n","import { red } from '@material-ui/core/colors'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n})\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport App from './App'\nimport { LanguageProvider } from './components/LanguageProvider'\nimport theme from './components/theme'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <LanguageProvider>\n      <App />\n    </LanguageProvider>\n  </ThemeProvider>,\n\n  // eslint-disable-next-line no-undef\n  document.querySelector('#root'),\n)\n"],"sourceRoot":""}