{"version":3,"sources":["components/Header.js","components/Disclaimer.js","lib/italianRegions.js","lib/urlUtils.js","rules/Constants.js","rules/zonaArancione.js","rules/zonaGialla.js","rules/zonaRossa.js","rules/index.js","components/ActiveRulesList.js","components/SearchBox.js","App.js","components/theme.js","index.js"],"names":["useStyles","makeStyles","theme","subTitle","marginTop","spacing","marginBottom","Header","classes","Typography","gutterBottom","Box","textAlign","fontSize","fontFamily","m","className","color","copyrightBox","contributeBox","Disclaimer","variant","align","Link","href","italianRegions","prettify","string","removeAccents","trim","replace","setHash","hash","encodedHash","encodeURI","history","pushState","location","hashConsumer","callable","useEffect","decodeURI","window","substr","ALL_REGIONS","zonaArancione","name","details","moreDetails","from","to","regions","commonDetails","zonaGiallaRafforzata","allRules","zonaGialla","zonaRossa","rulesComparator","thisRule","thatRule","_","isEqual","sameRulesReducer","rulesToOutput","currentRule","currentRuleIndex","rules","prevRule","isEqualWith","pop","push","cardRoot","dateFromTo","rulesList","rule","cardActions","justifyContent","parseDate","date","Date","toLocaleDateString","Rule","useState","showMoreDetails","setShowMoreDetails","join","Card","CardContent","component","List","dense","map","detail","ListItem","button","ListItemText","primary","CardActions","root","Button","size","onClick","ActiveRulesList","province","activeRules","selectedProvince","now","filter","includes","regione","sort","first","second","reduce","getActiveRules","length","nome","SearchBox","choosenRegion","setRegion","onRegionChoosen","region","urlUtils","foundRegion","find","toUpperCase","display","Autocomplete","id","onChange","value","options","getOptionLabel","option","style","width","renderInput","params","TextField","label","container","App","Container","maxWidth","createMuiTheme","palette","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.51cbadca.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nconst useStyles = makeStyles((theme) => ({\n  subTitle: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(1),\n  },\n}))\n\nexport default function Header() {\n  const classes = useStyles()\n  return (\n    <>\n      <Typography gutterBottom>\n        <Box textAlign=\"center\" fontSize=\"h3.fontSize\" fontFamily=\"Roboto\" m={1}>\n          Posso uscire ?\n        </Box>\n      </Typography>\n\n      <Typography className={classes.subTitle} color=\"textPrimary\">\n        <Box textAlign=\"left\" fontSize={20}>\n             Inserisci la tua provincia per conoscere le restrizioni.\n        </Box>\n      </Typography>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Link from '@material-ui/core/Link'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n  copyrightBox: {\n    marginTop: theme.spacing(10),\n  },\n  contributeBox: {\n    marginTop: theme.spacing(0.4),\n  },\n}))\n\nexport default function Disclaimer() {\n  const classes = useStyles()\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.copyrightBox} >\n      <Box>\n        Le informazioni fornite potrebbero essere incomplete o non corrette.\n      </Box>\n      <Box>\n        Attenersi sempre a fonti governative ufficiali.\n      </Box>\n\n      <Box className={classes.contributeBox}>\n        <Link href=\"http://github.com/Guglio95/posso-uscire\">\n          Contribuisci al progetto su Github\n        </Link>\n      </Box>\n    </Typography>\n  )\n}\n","/* eslint-disable */\n/* https://gist.github.com/stockmind/8bcbbf9ac41bc196401b96084ec8c5d3 */\nconst italianRegions = [\n  {\n    'nome': 'Agrigento',\n    'sigla': 'AG',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Alessandria',\n    'sigla': 'AL',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Ancona',\n    'sigla': 'AN',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Arezzo',\n    'sigla': 'AR',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Ascoli Piceno',\n    'sigla': 'AP',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Asti',\n    'sigla': 'AT',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Avellino',\n    'sigla': 'AV',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Bari',\n    'sigla': 'BA',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Barletta-Andria-Trani',\n    'sigla': 'BT',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Belluno',\n    'sigla': 'BL',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Benevento',\n    'sigla': 'BN',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Bergamo',\n    'sigla': 'BG',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Biella',\n    'sigla': 'BI',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Bologna',\n    'sigla': 'BO',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Bolzano/Bozen',\n    'sigla': 'BZ',\n    'regione': 'Trentino-Alto Adige/Südtirol',\n  },\n  {\n    'nome': 'Brescia',\n    'sigla': 'BS',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Brindisi',\n    'sigla': 'BR',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Cagliari',\n    'sigla': 'CA',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Caltanissetta',\n    'sigla': 'CL',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Campobasso',\n    'sigla': 'CB',\n    'regione': 'Molise',\n  },\n  {\n    'nome': 'Carbonia-Iglesias',\n    'sigla': 'CI',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Caserta',\n    'sigla': 'CE',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Catania',\n    'sigla': 'CT',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Catanzaro',\n    'sigla': 'CZ',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Chieti',\n    'sigla': 'CH',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Como',\n    'sigla': 'CO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Cosenza',\n    'sigla': 'CS',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Cremona',\n    'sigla': 'CR',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Crotone',\n    'sigla': 'KR',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Cuneo',\n    'sigla': 'CN',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Enna',\n    'sigla': 'EN',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Fermo',\n    'sigla': 'FM',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Ferrara',\n    'sigla': 'FE',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Firenze',\n    'sigla': 'FI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Foggia',\n    'sigla': 'FG',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Forlì-Cesena',\n    'sigla': 'FC',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Frosinone',\n    'sigla': 'FR',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Genova',\n    'sigla': 'GE',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Gorizia',\n    'sigla': 'GO',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Grosseto',\n    'sigla': 'GR',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Imperia',\n    'sigla': 'IM',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Isernia',\n    'sigla': 'IS',\n    'regione': 'Molise',\n  },\n  {\n    'nome': \"L'Aquila\",\n    'sigla': 'AQ',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'La Spezia',\n    'sigla': 'SP',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Latina',\n    'sigla': 'LT',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Lecce',\n    'sigla': 'LE',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Lecco',\n    'sigla': 'LC',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Livorno',\n    'sigla': 'LI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Lodi',\n    'sigla': 'LO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Lucca',\n    'sigla': 'LU',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Macerata',\n    'sigla': 'MC',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Mantova',\n    'sigla': 'MN',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Massa-Carrara',\n    'sigla': 'MS',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Matera',\n    'sigla': 'MT',\n    'regione': 'Basilicata',\n  },\n  {\n    'nome': 'Medio Campidano',\n    'sigla': 'VS',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Messina',\n    'sigla': 'ME',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Milano',\n    'sigla': 'MI',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Modena',\n    'sigla': 'MO',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Monza e della Brianza',\n    'sigla': 'MB',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Napoli',\n    'sigla': 'NA',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Novara',\n    'sigla': 'NO',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Nuoro',\n    'sigla': 'NU',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Ogliastra',\n    'sigla': 'OG',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Olbia-Tempio',\n    'sigla': 'OT',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Oristano',\n    'sigla': 'OR',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Padova',\n    'sigla': 'PD',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Palermo',\n    'sigla': 'PA',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Parma',\n    'sigla': 'PR',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Pavia',\n    'sigla': 'PV',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Perugia',\n    'sigla': 'PG',\n    'regione': 'Umbria',\n  },\n  {\n    'nome': 'Pesaro e Urbino',\n    'sigla': 'PU',\n    'regione': 'Marche',\n  },\n  {\n    'nome': 'Pescara',\n    'sigla': 'PE',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Piacenza',\n    'sigla': 'PC',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Pisa',\n    'sigla': 'PI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Pistoia',\n    'sigla': 'PT',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Pordenone',\n    'sigla': 'PN',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Potenza',\n    'sigla': 'PZ',\n    'regione': 'Basilicata',\n  },\n  {\n    'nome': 'Prato',\n    'sigla': 'PO',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Ragusa',\n    'sigla': 'RG',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Ravenna',\n    'sigla': 'RA',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Reggio di Calabria',\n    'sigla': 'RC',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': \"Reggio nell'Emilia\",\n    'sigla': 'RE',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Rieti',\n    'sigla': 'RI',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Rimini',\n    'sigla': 'RN',\n    'regione': 'Emilia-Romagna',\n  },\n  {\n    'nome': 'Roma',\n    'sigla': 'RM',\n    'regione': 'Lazio',\n  },\n  {\n    'nome': 'Rovigo',\n    'sigla': 'RO',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Salerno',\n    'sigla': 'SA',\n    'regione': 'Campania',\n  },\n  {\n    'nome': 'Sassari',\n    'sigla': 'SS',\n    'regione': 'Sardegna',\n  },\n  {\n    'nome': 'Savona',\n    'sigla': 'SV',\n    'regione': 'Liguria',\n  },\n  {\n    'nome': 'Siena',\n    'sigla': 'SI',\n    'regione': 'Toscana',\n  },\n  {\n    'nome': 'Siracusa',\n    'sigla': 'SR',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Sondrio',\n    'sigla': 'SO',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Taranto',\n    'sigla': 'TA',\n    'regione': 'Puglia',\n  },\n  {\n    'nome': 'Teramo',\n    'sigla': 'TE',\n    'regione': 'Abruzzo',\n  },\n  {\n    'nome': 'Terni',\n    'sigla': 'TR',\n    'regione': 'Umbria',\n  },\n  {\n    'nome': 'Torino',\n    'sigla': 'TO',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Trapani',\n    'sigla': 'TP',\n    'regione': 'Sicilia',\n  },\n  {\n    'nome': 'Trento',\n    'sigla': 'TN',\n    'regione': 'Trentino-Alto Adige/Südtirol',\n  },\n  {\n    'nome': 'Treviso',\n    'sigla': 'TV',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Trieste',\n    'sigla': 'TS',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': 'Udine',\n    'sigla': 'UD',\n    'regione': 'Friuli-Venezia Giulia',\n  },\n  {\n    'nome': \"Valle d'Aosta\",\n    'sigla': 'AO',\n    'regione': \"Valle d'Aosta\",\n  },\n  {\n    'nome': 'Varese',\n    'sigla': 'VA',\n    'regione': 'Lombardia',\n  },\n  {\n    'nome': 'Venezia',\n    'sigla': 'VE',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Verbano-Cusio-Ossola',\n    'sigla': 'VB',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Vercelli',\n    'sigla': 'VC',\n    'regione': 'Piemonte',\n  },\n  {\n    'nome': 'Verona',\n    'sigla': 'VR',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Vibo Valentia',\n    'sigla': 'VV',\n    'regione': 'Calabria',\n  },\n  {\n    'nome': 'Vicenza',\n    'sigla': 'VI',\n    'regione': 'Veneto',\n  },\n  {\n    'nome': 'Viterbo',\n    'sigla': 'VT',\n    'regione': 'Lazio',\n  },\n]\n\nexport default italianRegions\n","import { useEffect } from 'react'\nimport removeAccents from 'remove-accents'\n\nfunction prettify(string) {\n  return removeAccents(string.trim()).replace(/ +/g, '-')\n}\n\nfunction setHash(hash) {\n  const encodedHash = `#${encodeURI(prettify(hash))}`\n  if (history.pushState) {\n    history.pushState(null, null, encodedHash)\n  } else {\n    location.hash = encodedHash\n  }\n}\n\nfunction getHash() {\n  return decodeURI(window.location.hash.substr(1))\n}\n\nfunction hashConsumer(callable) {\n  return useEffect(() => {\n    const hash = getHash()\n    if (hash) {\n      callable(hash)\n    }\n  }, [])\n}\n\nexport default { setHash, hashConsumer, prettify }\n","export const ALL_REGIONS = 'ALL_REGIONS'\n\nexport const SICILIA = 'Sicilia'\nexport const PIEMONTE = 'Piemonte'\nexport const MARCHE = 'Marche'\nexport const TOSCANA = 'Toscana'\nexport const CAMPANIA = 'Campania'\nexport const PUGLIA = 'Puglia'\nexport const VENETO = 'Veneto'\nexport const LOMBARDIA = 'Lombardia'\nexport const EMILIA_ROMAGNA = 'Emilia-Romagna'\nexport const TRENTINO_ALTO_ADIGE = 'Trentino-Alto Adige/Südtirol'\nexport const SARDEGNA = 'Sardegna'\nexport const MOLISE = 'Molise'\nexport const CALABRIA = 'Calabria'\nexport const ABRUZZO = 'Abruzzo'\nexport const LAZIO = 'Lazio'\nexport const LIGURIA = 'Liguria'\nexport const FRIULI_VENEZIA_GIULIA = 'Friuli-Venezia Giulia'\nexport const BASILICATA = 'Basilicata'\nexport const UMBRIA = 'Umbria'\nexport const VALLE_D_AOSTA = \"Valle d'Aosta\"\n","import { ALL_REGIONS, CALABRIA, EMILIA_ROMAGNA, LOMBARDIA, SICILIA, VENETO } from './Constants'\n\nconst zonaArancione = {\n  name: '🟧 Zona Arancione',\n  details: [\n    '🚫 Bar e ristoranti chiusi tranne che per asporto.',\n    '🛍 Negozi aperti.',\n    '❌ Centri commerciali chiusi.',\n    \"📝 Serve l'autocertificazione per gli spostamenti al di fuori del comune.\",\n    '🌎 Puoi andare nella seconda casa ma solo se nella tua regione.',\n    '🚫 Non si possono superare i confini della regione.',\n  ],\n  moreDetails: [\n    '👭 Si può uscire dal comune per comprovate esigenze di lavoro, di studio, di salute o situazione di necessità.',\n    '🛒 Si può uscire dal comune per fruire di servizi altrimenti non disponibili o economicamente più convenienti.',\n    '🏚 Consentito il rientro alla propria residenza, domicilio o abitazione ad esclusione delle seconde case fuori regione.',\n    '⛪ Consentito l\\' accesso ai luoghi di culto e funzioni religiose.',\n    '🏃 Consentito svolgere attività sportiva e motoria all\\'aperto, senza uscire dal comune.',\n  ],\n}\n\nexport default [\n  {\n    ...zonaArancione,\n    from: '2021/01/09 00:00:00',\n    to: '2021/01/10 23:59:59',\n    regions: ALL_REGIONS,\n  },\n  {\n    ...zonaArancione,\n    from: '2021/01/11 00:00:00',\n    to: '2021/01/15 23:59:59',\n    regions: [LOMBARDIA, VENETO, EMILIA_ROMAGNA, CALABRIA, SICILIA],\n  },\n]\n","import {\n  ABRUZZO,\n  ALL_REGIONS,\n  BASILICATA,\n  CAMPANIA,\n  FRIULI_VENEZIA_GIULIA,\n  LAZIO,\n  LIGURIA,\n  MARCHE,\n  MOLISE,\n  PIEMONTE,\n  PUGLIA,\n  SARDEGNA,\n  TOSCANA,\n  TRENTINO_ALTO_ADIGE, UMBRIA, VALLE_D_AOSTA,\n} from './Constants'\n\nconst commonDetails = [\n  '🍻 Bar e ristoranti aperti fino alle 18. Asporto fino alle 22.',\n  '🛍 Negozi e centri commerciali aperti.',\n  '🛏 Coprifuoco dalle 22.00 alle 05.00.',\n  '📝 Ci si può muovere liberamente, senza autocertificazione.',\n]\nconst moreDetails = [\n  '🏚 Consentito il rientro alla propria residenza, domicilio o abitazione ad esclusione delle seconde case fuori regione.',\n  '⛪ Consentito l\\' accesso ai luoghi di culto e funzioni religiose.',\n  '🏃 Consentito svolgere attività sportiva e motoria all\\'aperto.',\n]\n\n// eslint-disable-next-line no-unused-vars\nconst zonaGialla = {\n  name: '🟨 Zona Gialla',\n  details: [\n    ...commonDetails,\n    '✅ Consentiti spostamenti in altre regioni gialle.',\n  ],\n  moreDetails,\n}\n\nconst zonaGiallaRafforzata = {\n  name: '🟨 Zona Gialla Rafforzata',\n  details: [\n    ...commonDetails,\n    '🚫 Non si possono superare i confini della regione.',\n  ],\n  moreDetails,\n}\n\nexport default [\n  {\n    ...zonaGiallaRafforzata,\n    from: '2021/01/07 00:00:00',\n    to: '2021/01/08 23:59:59',\n    regions: ALL_REGIONS,\n  },\n  {\n    ...zonaGiallaRafforzata,\n    from: '2021/01/11 00:00:00',\n    to: '2021/01/15 23:59:59',\n    regions: [\n      PIEMONTE, MARCHE, TOSCANA, CAMPANIA, PUGLIA, TRENTINO_ALTO_ADIGE,\n      SARDEGNA, MOLISE, ABRUZZO, LAZIO, LIGURIA, FRIULI_VENEZIA_GIULIA,\n      BASILICATA, UMBRIA, VALLE_D_AOSTA,\n    ],\n  },\n]\n","import { ALL_REGIONS } from './Constants'\n\nconst zonaRossa = {\n  name: '🟥 Zona Rossa',\n  details: [\n    '🚫 Bar, ristoranti chiusi tranne che per asporto.',\n    '🛍 Negozi e mercati chiusi ad esclusione di generi alimentati e prima necessità.',\n    '👭 Si può uscire (al massimo in coppia) per raggiungere amici e parenti una volta al giorno. Senza cambiare comune.',\n    '🛏 Coprifuoco dalle 22.00 alle 05.00.',\n    \"📝 Serve l'autocertificazione per qualsiasi spostamento.\",\n  ],\n  moreDetails: [\n    '👭 Si può uscire dal comune per comprovate esigenze di lavoro, di salute o situazione di necessità.',\n    '🏚 Consentito il rientro alla propria residenza, domicilio o abitazione ad esclusione delle seconde case fuori regione.',\n    '⛪ Consentito l\\' accesso ai luoghi di culto e funzioni religiose.',\n    '🏃 Consentito svolgere attività sportiva (correre) esclusivamente all\\'aperto ed individualmente.',\n    '🚶 Consentito svolgere attività motoria (camminare) in prossimità della propria abitazione, con mascherina.‍',\n    '✅ Aperte edicole, tabaccai, farmacie e parafarmacie.',\n  ],\n}\n\nexport default [\n  {\n    ...zonaRossa,\n    name: '🟥 Epifania',\n    from: '2021/01/05 00:00:00',\n    to: '2021/01/06 23:59:59',\n    regions: ALL_REGIONS,\n  },\n]\n","import { ALL_REGIONS } from './Constants'\nimport zonaArancione from './zonaArancione'\nimport zonaGialla from './zonaGialla'\nimport zonaRossa from './zonaRossa'\nimport _ from 'lodash'\n\n\nconst allRules = [\n  ...zonaGialla,\n  ...zonaArancione,\n  ...zonaRossa,\n]\n\nconst rulesComparator = (thisRule, thatRule) => {\n  return thisRule\n      && thatRule\n      && _.isEqual(thisRule.name, thatRule.name)\n      && _.isEqual(thisRule.details, thatRule.details)\n      && _.isEqual(thisRule.moreDetails, thatRule.moreDetails)\n}\n\nconst sameRulesReducer = (rulesToOutput, currentRule, currentRuleIndex, rules) => {\n  const prevRule = rules[currentRuleIndex - 1]\n  if (_.isEqualWith(currentRule, prevRule, rulesComparator)) {\n    rulesToOutput.pop()\n    rulesToOutput.push({ ...prevRule, to: currentRule.to })\n  } else {\n    rulesToOutput.push(currentRule)\n  }\n  return rulesToOutput\n}\n\nexport function getActiveRules(selectedProvince) {\n  const now = Date.now()\n  return allRules\n    .filter(rule => !rule.to || new Date(rule.to) > now)\n    .filter(rule => rule.regions === ALL_REGIONS || rule.regions.includes(selectedProvince.regione))\n    .sort((first, second) => new Date(first.from) - new Date(second.from))\n    .reduce(sameRulesReducer, [])\n}\n","import Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport { getActiveRules } from '../rules'\n\nconst useStyles = makeStyles((theme) => ({\n  copyrightBox: {\n    marginTop: theme.spacing(4),\n  },\n  contributeBox: {\n    marginTop: theme.spacing(0.4),\n  },\n  cardRoot: {\n    marginBottom: theme.spacing(2),\n  },\n  dateFromTo: {\n    fontSize: 18,\n  },\n  rulesList: {\n    marginTop: 4,\n  },\n  rule: {\n    fontSize: 17,\n  },\n  cardActions: {\n    justifyContent: 'center',\n    marginBottom: 10,\n  },\n}))\n\nfunction parseDate(date) {\n  return new Date(date).toLocaleDateString()\n}\n\nfunction Rule({ rule }) {\n  const [showMoreDetails, setShowMoreDetails] = useState(false)\n  const classes = useStyles()\n\n  const { from, to, details, moreDetails } = rule\n\n  const dateFromTo = [(from ? `Dal ${parseDate(from)}` : ''), (to ? `Al ${parseDate(to)}` : '')].join(' ')\n\n  return (\n    <Card className={classes.cardRoot} variant=\"outlined\">\n      <CardContent>\n        {dateFromTo && <Typography className={classes.dateFromTo} color=\"textPrimary\" gutterBottom>\n          📆 {dateFromTo}\n        </Typography>\n        }\n        {rule.name && <Typography variant=\"h5\" component=\"h2\">\n          {rule.name}\n        </Typography>\n        }\n\n        {details && <Typography color=\"textPrimary\" className={classes.rulesList}>\n          <List component=\"nav\" dense={true}>\n            {[...details, ...(showMoreDetails ? moreDetails : [])].map(detail =>\n              <ListItem button key={detail}>\n                <ListItemText\n                  classes={{ primary: classes.rule }}\n                  primary={detail}\n                />\n              </ListItem>)\n            }\n          </List>\n        </Typography>\n        }\n      </CardContent>\n      {!showMoreDetails && moreDetails && <CardActions classes={{ root: classes.cardActions }}>\n        <Button size=\"medium\" color=\"primary\" variant=\"outlined\" onClick={() => setShowMoreDetails(true)}>\n          Scopri di più\n        </Button>\n      </CardActions>\n      }\n    </Card>\n  )\n}\nRule.propTypes = {\n  rule: PropTypes.object,\n}\n\n\nexport default function ActiveRulesList({ province }) {\n  const classes = useStyles()\n  const activeRules = getActiveRules(province)\n  return (\n    <Typography variant=\"body2\" color=\"textPrimary\" className={classes.copyrightBox} >\n      {activeRules.length === 0\n        ? <Box textAlign=\"center\" fontSize={20} color={'red'}>\n            Nessun risultato trovato.\n        </Box>\n        : activeRules.map(rule => <Rule key={`${province.nome}-${rule.from}-${rule.to}`} rule={rule}/>)}\n    </Typography>\n  )\n}\nActiveRulesList.propTypes = {\n  province: PropTypes.object,\n}\n","import Box from '@material-ui/core/Box'\nimport Link from '@material-ui/core/Link'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport React, { useState } from 'react'\nimport regions from '../lib/italianRegions'\nimport urlUtils from '../lib/urlUtils'\nimport ActiveRulesList from './ActiveRulesList'\n\nexport default function SearchBox() {\n  const [choosenRegion, setRegion] = useState()\n\n  const onRegionChoosen = (region) => {\n    setRegion(region)\n    urlUtils.setHash(region?.nome || '')\n  }\n\n  urlUtils.hashConsumer((hash) => {\n    const foundRegion = regions.find(\n      region => urlUtils.prettify(region.nome.trim()).toUpperCase() === hash.toUpperCase().trim()\n    )\n    if (foundRegion) {\n      setRegion(foundRegion)\n    }\n  })\n\n  return (\n    <>\n      {!choosenRegion\n        ? <Box display=\"flex\" justifyContent=\"center\">\n          <Autocomplete\n            id=\"province\"\n            onChange={(_, value) => onRegionChoosen(value)}\n            options={regions}\n            getOptionLabel={(option) => option.nome}\n            style={{ width: '80%', marginTop: 20 }}\n            renderInput={(params) => <TextField {...params} label=\"Provincia\" variant=\"outlined\"/>}\n          />\n        </Box>\n        : <Typography color=\"textPrimary\" fontFamily=\"Roboto\" >\n          <Box textAlign=\"left\" fontSize={15}>\n            <Link onClick={() => onRegionChoosen(null)}>\n              Cambia città\n            </Link>\n          </Box>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\">\n          📍 {choosenRegion.nome}\n          </Box>\n        </Typography>\n      }\n\n      { choosenRegion && <ActiveRulesList province={choosenRegion}/>}\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport Container from '@material-ui/core/Container'\nimport Header from './components/Header'\nimport Disclaimer from './components/Disclaimer'\nimport SearchBox from './components/SearchBox'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(5),\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Header />\n      <SearchBox/>\n      <Disclaimer />\n    </Container>\n  )\n}\n","import { red } from '@material-ui/core/colors'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n})\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport App from './App'\nimport theme from './components/theme'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n\n  // eslint-disable-next-line no-undef\n  document.querySelector('#root'),\n)\n"],"sourceRoot":""}